{
  "chunk-674ae697ba691bf3c9f7514577fa45ad": {
    "tokens": 1200,
    "content": "ChartCitor: Answer Citations for ChartQA via Multi-Agent LLM Retrieval \n\nKanika Goswami IGDTUW, Delhi India \n\nPuneet Mathur Adobe Research USA \n\nRyan Rossi Adobe Research USA \n\nFranck Dernoncourt Adobe Research USA \n\nAbstract \n\nLarge Language Models (LLMs) can perform chart question-answering tasks but often generate unverified hallucinated responses. Existing answer attribution methods struggle to ground responses in source charts due to limited visual-semantic context, complex visual-text alignment requirements, and difficulties in bounding box prediction across complex layouts. We present ChartCitor, a multi-agent framework that provides fine-grained bounding box citations by identifying supporting evidence within chart images. The system orchestrates LLM agents to perform chart-to-table extraction, answer reformulation, table augmentation, evidence retrieval through prefiltering and re-ranking, and table-to-chart mapping. ChartCitor outperforms existing baselines across different chart types. Qualitative user studies show that ChartCitor helps increase user trust in Generative AI by providing enhanced explainability for LLMassisted chart QA and enables professionals to be more productive. \n\nCCS Concepts \n\n• Information systems Information extraction. \n\nKeywords \n\nVisual Fact Checking, Information Extraction, Multimodal Retrieval, LLM Agents \n\nACM Reference Format: \n\nKanika Goswami, Puneet Mathur, Ryan Rossi, and Franck Dernoncourt. 2025. ChartCitor: Answer Citations for ChartQA via Multi-Agent LLM Retrieval. In . ACM, New York, NY, USA, 4 pages. https://doi.org/10.1145/ nnnnnnn.nnnnnnn \n\n1 Introduction \n\nChart data finds extensive use across diverse domains such as healthcare, finance, and education. Recently, LLMs such as Llama-3.2 [16], Claude-3.5 Sonnet, and GPT-4V [1] have proven effective in utilizing in-context learning and visual prompting to interpret and reason over chart images. However, these models tend to hallucinate — generate answers with semantically plausible but factually incorrect information — which undermines their reliability and erodes user trust [14, 19]. While existing approaches attempt to address hallucination by grounding LLM-generated responses in source documents through citation mechanisms [7], charts present unique challenges: (i) complex mapping between visual elements and underlying data, (ii) limited contextual information due to compressed visual data representation, (iii) difficulty in localizing chart elements across diverse visualization types and layouts, and (iv) ambiguity in alignment between text descriptions and visual elements. Prior research has explored various approaches to address this challenge, including instruction tuning [8], in-context learning [5], and natural-language inference (NLI)-based post-hoc attribution methods [4]. However, these approaches have primarily focused on attributing entire charts rather than specific structural elements [6], limiting their practical utility. To address these limitations, we propose ChartCitor, a system that provides visual evidence for generated answers by identifying and highlighting relevant chart elements through bounding box annotations. ChartCitor works by orchestrating multiple specialized LLM agents to: (1) extract structured data table from charts, (2) break down answers into logical steps, (3) generate contextual descriptions for rows/columns, (4) identify supporting evidence through pre-filtering and re-ranking to connect specific table cells to claims, and (5) localize the selected cells in the chart image. ChartCitor helps professionals save time on fact-checking LLM-generated answers and enhances user trust by providing reliable and logically-explained citations sourced from charts. \n\n2 ChartCitor \n\nWe aim to solve the Fine-grained Structured Chart Attribution task which involves identifying graph elements (e.g bars, lines, pies in chart images) that support factual claims in a generated text response to a user’s question. We propose ChartCitor (Fig. 1) – a multiagent framework that provides fine-grained citations for generated answers grounded in chart image by orchestrating multiple LLM agents, which is explained as follows: \n\n(1) Chart2Table Extraction Agent: Charts are predominantly present in PDFs or scanned documents that need to be converted into structured table formats (e.g., CSV, or HTML). We utilize GPT-4V to comprehend PDF images and output corresponding HTML without the need for external OCR using few shot prompting to identify cell data across each row/column. We use visual self-reflection [13] to provide the GPT-4V with its own rendered HTML and data table output to check for consistency between the re-plotted LLM output and the original chart. In case of inconsistencies in the data extraction, the LLM refines its output until the extracted table data is error-free. (2) Answer Reformulation Agent: The answer to be attributed, which can be AI-generated or otherwise, may be composed of multiple facts, numerical formulations and multi-hop logic. Each fact may be sourced from a different row/column in the chart table. To facilitate precise citations, re-framing the answer statement into a chain of reasoning steps helps to better retrieve the correct citations from the table. We convert the answer statement into a hierarchy of reasoning thoughts/arguments via few-shot in-context prompting, ensuring the resultant answer arguments are independent sentences without any deviation in their collective meaning from the original answer statement. \n\n(3) Entity Captioning Agent: Understanding tabular data extends beyond simple cell interpretation, requiring comprehension of how cell information relate to both the table’s structure and its broader context. Tables often present analytical challenges through ambiguous content, including technical terminology, contextless numeric values, domain-specific symbols, and hierarchical row/column headers. These ambiguities impede reliable evidence extraction and citation validation through semantic matching. Our solution leverages LLMs in an unsupervised manner to generate rich, multi-layered contextual descriptions: (i) Row Captioning: Our",
    "chunk_order_index": 0,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:fb606e891fba6d421fb220d90fabbbc1",
      "default:extract:5b5c3fab4eeeb071b1c059949aa451a7"
    ],
    "create_time": 1757908567,
    "update_time": 1757908590,
    "_id": "chunk-674ae697ba691bf3c9f7514577fa45ad"
  },
  "chunk-b839fa86d69937abbbfac9da3a686d58": {
    "tokens": 1200,
    "content": "ular data extends beyond simple cell interpretation, requiring comprehension of how cell information relate to both the table’s structure and its broader context. Tables often present analytical challenges through ambiguous content, including technical terminology, contextless numeric values, domain-specific symbols, and hierarchical row/column headers. These ambiguities impede reliable evidence extraction and citation validation through semantic matching. Our solution leverages LLMs in an unsupervised manner to generate rich, multi-layered contextual descriptions: (i) Row Captioning: Our system employs GPT-4o to generate comprehensive row-level descriptions that capture complex patterns across features, summarize temporal trends, highlight significant dates and provide comparative analysis with respect to outliers within each row. (ii) Column Captioning: We generate detailed captions for each column using GPT-4o to explain ambiguous measurement units, symbols, empty cell spaces, and technical relationship of it’s contents with corresponding row headers. (iii) Cell Captioning: Row and column-level captions may highlight broader trends but the fine-grained cell level information needs to be contextualized in terms of its associated row and column headers. Captioning agent uses GPT-4o to describe the importance of each cell in the context of its associated row and columns. \n\nTable Cell Retrieval: We use retrieve-then-rank approach to identify the most relevant table cells. Our two-step approach begins with LLM-based pre-filtering to reject irrelevant rows and columns. We then employ LLM re-ranking to retrieve the most precise cell-level matches, ensuring both comprehensive coverage and accuracy in the final selection. \n\n(4) LLM Pre-filtering Agent: We hypothesize that some of the table rows/ columns are likely to be unrelated to the answer facts. Passing irrelevant and distracting table entities to the LLM-based re-ranker can mislead it, negatively impacting the ranking process. Inspired by [11], the LLM-based pre-filtering step uses chain-of-thought [18] followed by Plan and Solve [17] prompting techniques to generate a relevance score for each row/column based on the significance of its descriptive caption to the given answer statement (between 0 to 1). Additionally, we prompt the LLM to explain its rationale behind the score generation to enhance explainability and avoid hallucinations. We establish a specific threshold (usually $0 . 3 - 0 . 5 )$ ) for row/column filtering to retain potential citations that are sent to the re-ranker, discarding those falling below the threshold. This implementation significantly reduces the number of noisy of rows and columns that can misguide the re-ranker, leading to an improved citation retrieval performance. \n\n(5) LLM Re-ranking Agent: LLMs providing citations that don’t directly support their claims can be interpreted as a form of hallucination which may diminish user confidence. To solve this, we retrieve the set of table cells that are collectively both sufficient and directly relevant to the answer claims. We use RankGPT [15], a listwise LLM re-ranker to re-rank the table cells extracted from the intersection of rows and columns selected in the pre-filtering stage. Additionally, we prompt GPT-4o to provide a layer-of-thought [3] explanation of its rationale in ranking the cell items, enhancing the transparency in the citation mechanism by enforcing a logical coherence in the evidence chain. \n\n(6) Cell Localization Agent: The final step maps cited table cells to their corresponding visual elements in the chart image. This agent leverages DETR trained [2] on ChartQA data to identify all possible data marks (bars, line segments, pie slices) using image processing algorithms. GPT-4V with few-shot set-of-marks prompting [20] then identifies elements corresponding to the cited cells. The agent generates bounding box coordinates for the relevant visual elements, employing visual self-reflection to verify precise correspondence between highlighted regions and cited data points. \n\n3 Implementation Details \n\nAll constituent agents utilize textual LLM APIs such as those provided by OpenAI (GPT-4o, GPT-4V) or Claude Sonnet-3.5. We use ChatGPT $- 4 0$ as the base multimodal language model (MLLM) for ChartCitor. We convert data tables from TabCite benchmark [10] into bar/pie/line charts along with paired QA. \n\nEvaluation: We adopt visual Intersection over Union (IoU) as principal metric for chart attribution tasks. Detected regions in the chart image are matched to ground truth regions (e.g., bars in barplot or pies in piechart) based on a threshold value of $\\mathrm { I o U } \\ge 0 . 9 .$ Unlike bar charts and pie charts, where detected regions can be matched to discrete ground truth regions, line charts involve discrete points. Since grounding models generate bounding boxes or regions, we compute the proportion of ground truth points covered within the detected region(s) over total points detected. \n\nBaselines: (1) Zero-shot LLM Bounding Box Prompting – We prompt GPT-4o and Claude 3.5 Sonnet to predict normalized bounding box coordinates for chart components based on input text and the visual chart. (2) Kosmos-2 [12] is a multimodal LLM with textto-visual grounding capabilities. It represents object locations as Markdown links for generating bounding boxes for visual grounding tasks. (3) LISA (Large Language Instructed Segmentation Assistant) [9] is a reasoning-based zero-shot segmentation model that generates masks from implicit and complex textual queries. \n\n4 Results and Discussion \n\nTable 2(a) shows quantitative results that demonstrate that ChartCitor consistently outperforms the baselines across all chart types, highlighting its robustness and effectiveness in visual chart understanding. ChartCitor achieves better performance compared to directly prompting LLMs to predict bounding boxes. Further, even \n\nusing GPT-4V with set of marks prompting",
    "chunk_order_index": 1,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:16a34d078334d123c496ff38975b5418",
      "default:extract:fb862ad460e5496c60566c85f55a867e"
    ],
    "create_time": 1757908567,
    "update_time": 1757908585,
    "_id": "chunk-b839fa86d69937abbbfac9da3a686d58"
  },
  "chunk-9af5c81195bb45458709701521978b72": {
    "tokens": 1200,
    "content": "ed Segmentation Assistant) [9] is a reasoning-based zero-shot segmentation model that generates masks from implicit and complex textual queries. \n\n4 Results and Discussion \n\nTable 2(a) shows quantitative results that demonstrate that ChartCitor consistently outperforms the baselines across all chart types, highlighting its robustness and effectiveness in visual chart understanding. ChartCitor achieves better performance compared to directly prompting LLMs to predict bounding boxes. Further, even \n\nusing GPT-4V with set of marks prompting over detected chart elements show weak performance. Kosmos-2 and LISA perform poorly, with very low IoU scores, highlighting their inability to handle factual grounding in charts due to insufficient visual and numerical reasoning. Interestingly, all tested method including our proposed ChartCitor, zero-shot LMM prompting, LISA and KOSMOS2 struggle with interpreting complex geometrical proportions in pie charts due to their difficulty in handling non-rectangular bounding box segmentation task. Further, we conducted a user study (Fig. 2(b) to evaluate the citation accuracy and perceived utility of fine-grained chart attribution provided by ChartCitor. Five participants evaluated 250 randomly sampled question-answer pairs with associated chart images to study the usefulness and accuracy of the citations provided by ChartCitor compared to direct GPT-4o prompting. The evaluation results demonstrated strong positive reception, with participants rating the attributions as Completely Accurate $4 1 \\%$ vs $2 8 \\%$ ) or Somewhat Accurate ( $1 7 \\%$ vs $1 5 \\%$ ) for verifying chart-based question answering accuracy in ChartCitor and GPT-4o, respectively. Attributions were found to be more \"Completely Inaccurate\" ChartCitor than GPT-4o ( $1 7 \\%$ vs $3 1 \\%$ ). Participants described the citations as a handy tool in making verification of LLM-generated answers easier (\"...can help me to quickly verify trends in charts, cutting down the time I spent on 10 documents from 5 hrs to 20 mins.\"). \n\n5 Conclusion \n\nWe introduced ChartCitor, which grounds LLM-generated QA responses to chart elements using agentic orchestration and set-ofmarks prompting. The system outperforms baselines by $9 . 1 5 \\%$ and shows promise for rich document QA over PDF collections. While currently effective for single-chart citations, future work can address multi-chart interactions, hallucination mitigation, and explicit citation-text mapping to enhance trustworthy multimodal content generation. \n\nReferences \n\n[1] Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge Akkaya, Florencia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman, Shyamal Anadkat, et al. 2023. Gpt-4 technical report. arXiv preprint arXiv:2303.08774 (2023). \n\n[2] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, and Sergey Zagoruyko. 2020. End-to-end object detection with transformers. In European conference on computer vision. Springer, 213–229.   \n[3] Wachara Fungwacharakorn, Nguyen Ha Thanh, May Myo Zin, and Ken Satoh. 2024. Layer-of-Thoughts Prompting (LoT): Leveraging LLM-Based Retrieval with Constraint Hierarchies. arXiv preprint arXiv:2410.12153 (2024).   \n[4] Luyu Gao, Zhuyun Dai, Panupong Pasupat, Anthony Chen, Arun Tejasvi Chaganty, Yicheng Fan, Vincent Zhao, Ni Lao, Hongrae Lee, Da-Cheng Juan, and Kelvin Guu. 2023. RARR: Researching and Revising What Language Models Say, Using Language Models. In Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), Anna Rogers, Jordan Boyd-Graber, and Naoaki Okazaki (Eds.). Association for Computational Linguistics, Toronto, Canada, 16477–16508. https://doi.org/10.18653/v1/2023.acllong.910   \n[5] Tianyu Gao, Howard Yen, Jiatong Yu, and Danqi Chen. 2023. Enabling Large Language Models to Generate Text with Citations. In Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing, Houda Bouamor, Juan Pino, and Kalika Bali (Eds.). Association for Computational Linguistics, Singapore, 6465–6488. https://doi.org/10.18653/v1/2023.emnlp-main.398   \n[6] Siqing Huo, Negar Arabzadeh, and Charles Clarke. 2023. Retrieving supporting evidence for generative question answering. In Proceedings of the Annual International ACM SIGIR Conference on Research and Development in Information Retrieval in the Asia Pacific Region. 11–20.   \n[7] Ziwei Ji, Nayeon Lee, Rita Frieske, Tiezheng Yu, Dan Su, Yan Xu, Etsuko Ishii, Ye Jin Bang, Andrea Madotto, and Pascale Fung. 2023. Survey of hallucination in natural language generation. Comput. Surveys 55, 12 (2023), 1–38.   \n[8] Ehsan Kamalloo, Aref Jafari, Xinyu Zhang, Nandan Thakur, and Jimmy Lin. 2023. HAGRID: A Human-LLM Collaborative Dataset for Generative InformationSeeking with Attribution. arXiv:2307.16883 (2023).",
    "chunk_order_index": 2,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:e7cdcf63301d81ea34478564ec052894",
      "default:extract:badc118090eef08748c2092427662139"
    ],
    "create_time": 1757908567,
    "update_time": 1757908592,
    "_id": "chunk-9af5c81195bb45458709701521978b72"
  },
  "chunk-30a776bce427dd986de9cf5abd6e011f": {
    "tokens": 1131,
    "content": "ale Fung. 2023. Survey of hallucination in natural language generation. Comput. Surveys 55, 12 (2023), 1–38.   \n[8] Ehsan Kamalloo, Aref Jafari, Xinyu Zhang, Nandan Thakur, and Jimmy Lin. 2023. HAGRID: A Human-LLM Collaborative Dataset for Generative InformationSeeking with Attribution. arXiv:2307.16883 (2023).   \n[9] Xin Lai, Zhuotao Tian, Yukang Chen, Yanwei Li, Yuhui Yuan, Shu Liu, and Jiaya Jia. 2024. Lisa: Reasoning segmentation via large language model. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. 9579– 9589.   \n[10] Puneet Mathur, Alexa Siu, Nedim Lipka, and Tong Sun. 2024. MATSA: MultiAgent Table Structure Attribution. In Conference on Empirical Methods in Natural Language Processing. https://aclanthology.org/2024.emnlp-demo.26/   \n[11] Baharan Nouriinanloo and Maxime Lamothe. 2024. Re-Ranking Step by Step: Investigating Pre-Filtering for Re-Ranking with Large Language Models. arXiv preprint arXiv:2406.18740 (2024).   \n[12] Zhiliang Peng, Wenhui Wang, Li Dong, Yaru Hao, Shaohan Huang, Shuming Ma, and Furu Wei. 2023. Kosmos-2: Grounding multimodal large language models to the world. arXiv preprint arXiv:2306.14824 (2023).   \n[13] Noah Shinn, Beck Labash, and Ashwin Gopinath. 2023. Reflexion: an autonomous agent with dynamic memory and self-reflection. ArXiv abs/2303.11366 (2023). https://api.semanticscholar.org/CorpusID:257636839   \n[14] Ben Snyder, Marius Moisescu, and Muhammad Bilal Zafar. 2023. On Early Detection of Hallucinations in Factual Question Answering. ArXiv abs/2312.14183 (2023). https://api.semanticscholar.org/CorpusID:266521062   \n[15] Weiwei Sun, Lingyong Yan, Xinyu Ma, Shuaiqiang Wang, Pengjie Ren, Zhumin Chen, Dawei Yin, and Zhaochun Ren. 2023. Is ChatGPT Good at Search? Investigating Large Language Models as Re-Ranking Agents. In Proceedings of the 2023 Conference on Empirical Methods in Natural Language Processing, Houda Bouamor, Juan Pino, and Kalika Bali (Eds.). Association for Computational Linguistics, Singapore, 14918–14937. https://doi.org/10.18653/v1/2023.emnlpmain.923   \n[16] Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timothée Lacroix, Baptiste Rozière, Naman Goyal, Eric Hambro, Faisal Azhar, et al. 2023. Llama: Open and efficient foundation language models. arXiv preprint arXiv:2302.13971 (2023).   \n[17] Lei Wang, Wanyu Xu, Yihuai Lan, Zhiqiang Hu, Yunshi Lan, Roy Ka-Wei Lee, and Ee-Peng Lim. 2023. Plan-and-Solve Prompting: Improving Zero-Shot Chainof-Thought Reasoning by Large Language Models. In Annual Meeting of the Association for Computational Linguistics. https://api.semanticscholar.org/CorpusID: 258558102   \n[18] Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Ed Huai hsin Chi, F. Xia, Quoc Le, and Denny Zhou. 2022. Chain of Thought Prompting Elicits Reasoning in Large Language Models. ArXiv abs/2201.11903 (2022). https://api.semanticscholar.org/CorpusID:246411621   \n[19] Ziwei Xu, Sanjay Jain, and Mohan S. Kankanhalli. 2024. Hallucination is Inevitable: An Innate Limitation of Large Language Models. ArXiv abs/2401.11817 (2024). https://api.semanticscholar.org/CorpusID:267069207   \n[20] Jianwei Yang, Hao Zhang, Feng Li, Xueyan Zou, Chunyuan Li, and Jianfeng Gao. 2023. Set-of-mark prompting unleashes extraordinary visual grounding in gpt-4v. arXiv preprint arXiv:2310.11441 (2023).   \n[21] Jianwei Yang, Hao Zhang, Feng Li, Xueyan Zou, Chun yue Li, and Jianfeng Gao. 2023. Set-of-Mark Prompting Unleashes Extraordinary Visual Grounding in GPT-4V. ArXiv abs/2310.11441 (2023). https://api.semanticscholar.org/CorpusID: 266149987",
    "chunk_order_index": 3,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:d40ba024b7df6d6811ebb29887189efa",
      "default:extract:2eb49957db97e366194f72ea81b78cb6"
    ],
    "create_time": 1757908567,
    "update_time": 1757908608,
    "_id": "chunk-30a776bce427dd986de9cf5abd6e011f"
  },
  "chunk-b7255d18a8df30a4afaa5abde11b9392": {
    "tokens": 31,
    "content": "ArXiv abs/2310.11441 (2023). https://api.semanticscholar.org/CorpusID: 266149987",
    "chunk_order_index": 4,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:3a4313a2df9c59576affe7fe7f6fda9d",
      "default:extract:4d5576d811a91d4fb8a6cbb40a4696bc"
    ],
    "create_time": 1757908567,
    "update_time": 1757908591,
    "_id": "chunk-b7255d18a8df30a4afaa5abde11b9392"
  },
  "chunk-00c09e1f875a7252eec48cf5da9e8587": {
    "content": "\nImage Content Analysis:\nImage Path: /Users/gozachary/Downloads/Data-2/RAG-Anything/improved_efr_output/2502.00989v1/auto/images/dc80eb40fe8039ab9fcd844aa4438af28967c504f10187490fad92565b27f5ce.jpg\nCaptions: None\nFootnotes: None\n\nVisual Analysis: The image is a detailed diagram illustrating the workflow of the ChartCitor system, a multi-agent framework aimed at extracting and verifying information from chart images. The overall composition is horizontal and linear, following a step-by-step processing logic from left to right. The visual style is organized and color-coded to distinguish various functions and processes. \n\nStarting from the left, the first section is the 'Table Extraction Agent' area, highlighted in orange. It depicts an Input Chart being processed into an HTML Table through a self-reflective ensemble using few-shot examples. The flow is represented with arrows and icons resembling documents and connection nodes. \n\nNext is the 'Entity Captioning Agent,' located centrally within a purple section. This part shows an 'HTML Table' being expanded into 'Row Captions,' 'Column Captions,' and 'Cell Captions,' suggesting the breakdown of an HTML structure into more nuanced descriptions. The table illustration is simple but effective, and arrows indicate the direction of information flow.\n\nAbove the visual flow, the diagram illustrates the 'LLM Prefiltering Agent' in a blue section. This part includes a graphical representation of 'Atomic Fact,' 'Row-1,' 'Row-2,' 'Col-1,' 'Col-2,' and 'Col-6.' These are tied to mechanisms identified as 'Score Filter' and subsequent tables showing selected rows and columns after filtering, described with column graphs denoting relevance scores.\n\nThe next prominent section is the 'Answer Reformulation Agent,' depicted in a teal format. It processes 'ANSWER RESPONSE' into 'ANSWER FACTS.' The boxes include structured layouts of facts and identified missing citations, denoted in red text, indicating connections to subsequent elements in the diagram.\n\nFurther down the sequence, in a goldenrod section, lies the 'LLM Re-Ranking Agent.' This portion utilizes 'RankGPT' and visual iconography resembling charts and graphs to illustrate the selection process of relevant cells from earlier table entities through 'Row-1,' 'Row-5,' 'Col-1,' and 'Col-6' descriptions.\n\nAt the right end of the sequential flow is the 'Cell Localization Agent' in a light blue shade, highlighting a tool labeled 'DETR.' This section deals with identifying 'Set-of-Marks,' processing 'Table Cells,' and generating bounding box coordinates for visual elements found in the chart image, thus localizing the visual evidence. The agent uses visual self-reflection to ensure precise correspondence between highlighted regions and cited data points.\n\nA final output is titled 'ANSWER CITATIONS,' where previously reformulated responses now include embedded citation links denoted as '[Bar5]' and '[Bar3].' Key highlights are in red text with bars marked around important data points, linking extracted data to chart elements, enhancing clarity and trust.\n\nThe entire diagram is vibrant, with distinct colors representing different agents and processes, improving readability and thematic organization. Icons, arrows, and descriptive text boxes provide a clear guide through the complex multi-agent process.",
    "tokens": 688,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "chunk_order_index": 5,
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:c6857d2c2e4de62e7ab2d8e723e4a25a",
      "default:extract:67bb7e5a708ddc20044b33a4f28f36d8"
    ],
    "is_multimodal": true,
    "modal_entity_name": "ChartCitor System Workflow Diagram (image)",
    "original_type": "image",
    "page_idx": 1,
    "create_time": 1757908700,
    "update_time": 1757908726,
    "_id": "chunk-00c09e1f875a7252eec48cf5da9e8587"
  },
  "chunk-08e5fe11f650f03065bd683c9df23915": {
    "content": "Table Analysis:\nImage Path: /Users/gozachary/Downloads/Data-2/RAG-Anything/improved_efr_output/2502.00989v1/auto/images/6aad72893fcc4ac2ad7d8bd0522ca5f9d7aafe941ccd14891339efc94e0fb015.jpg\nCaption: None\nStructure: <table><tr><td>Method</td><td>IoU</td></tr><tr><td>Kosmos-2</td><td>3.89</td></tr><tr><td>LISA</td><td>4.34</td></tr><tr><td>GPT-4V (Direct Bbox Decoding)</td><td>12.5</td></tr><tr><td>Claude-3.5 (Sonnet Direct Bbox Decoding)</td><td>13.8</td></tr><tr><td>DETR [2]+ Set-of-Marks Prompting [21]</td><td>18.6</td></tr><tr><td>ChartCitor</td><td>27.4</td></tr></table>\nFootnotes: None\n\nAnalysis: The table presents a comparative analysis of various methods used for visual grounding tasks, particularly focusing on their Intersection over Union (IoU) scores. The structure includes two columns: 'Method' which lists the different models, and 'IoU' which provides their respective performance scores. The key data points reveal that ChartCitor outperforms all other methods with an IoU score of 27.4, indicating its robustness in accurately mapping visual elements. The table highlights significant performance disparities, especially between historical models like Kosmos-2 (3.89) and advanced models like ChartCitor. This pattern reflects a trend toward improved visual reasoning in AI models and showcases the effectiveness of the ChartCitor framework discussed in the surrounding content. In context, this table underscores the effectiveness of agent orchestration and set-of-marks prompting in enhancing LLM capabilities for visual interpretation, aligning with the content's emphasis on reducing hallucination and improving citation accuracy. Furthermore, this comparative performance data not only validates the claims made about the ChartCitor's superiority but also illustrates the challenges faced by older models like LISA and Kosmos-2 in handling visual grounding tasks. Therefore, the table serves as empirical evidence of the strides made in multimodal language understanding and further emphasizes the relevance of rich contextual descriptions in the communication of complex data relationships.",
    "tokens": 521,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "chunk_order_index": 6,
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:602fc39c63942a6f46217d7d7c26e23f",
      "default:extract:c29606c1a8ee163b93095e301ccba771"
    ],
    "is_multimodal": true,
    "modal_entity_name": "Performance Comparison of Chart Interpretation Methods (table)",
    "original_type": "table",
    "page_idx": 2,
    "create_time": 1757908700,
    "update_time": 1757908719,
    "_id": "chunk-08e5fe11f650f03065bd683c9df23915"
  },
  "chunk-68430eb48b5a86af09fa87f43bf15641": {
    "content": "\nImage Content Analysis:\nImage Path: /Users/gozachary/Downloads/Data-2/RAG-Anything/improved_efr_output/2502.00989v1/auto/images/721f52a4142cec5ef6887349a53981cff863972945eec15ef60eaf78038ad5b7.jpg\nCaptions: None\nFootnotes: None\n\nVisual Analysis: The image is a bar chart titled 'Accuracy Comparison', which visualizes the user evaluation results comparing the accuracy of ChartCitor and GPT-4o in the context of verifying chart-based question answering as described in the provided surrounding content. The chart features a horizontal x-axis labeled with four categories: 'Completely ACCURATE', 'Somewhat ACCURATE', 'Somewhat INACCURATE', and 'Completely INACCURATE'. The vertical y-axis represents the percentage scale from 0 to over 60%. The bar chart consists of two sets of vertical bars, each color-coded: purple represents ChartCitor, while green represents GPT-4o. In the 'Completely ACCURATE' category, the ChartCitor bar (purple) reaches above 60%, significantly outperforming the GPT-4o bar (green), which is around 40%. In the 'Somewhat ACCURATE' category, both ChartCitor and GPT-4o have similar bars around 20%. In the 'Somewhat INACCURATE' category, both the bars are also similar, close to 20%, slightly higher for ChartCitor. For 'Completely INACCURATE', the GPT-4o bar is higher, approaching 40%, while the ChartCitor bar remains under 20%. The lighting in the image is balanced with clear contrast between the purple and green color scheme which represents the comparative performance of the tools. The image visually encapsulates how ChartCitor, in alignment with the context provided, is shown to perform better in achieving more accurate citations compared to GPT-4o. No other objects or text accompany the chart, maintaining a focused, professional presentation style.",
    "tokens": 433,
    "full_doc_id": "doc-f014b24ce67c2f1f72fcd018e10b6ae9",
    "chunk_order_index": 7,
    "file_path": "2502.00989v1.pdf",
    "llm_cache_list": [
      "default:extract:d7d441bb6f4de631b8be8b5d90b28ddf",
      "default:extract:10a34f33d8ffd2749bef4d322505063f"
    ],
    "is_multimodal": true,
    "modal_entity_name": "Accuracy Comparison Bar Chart (image)",
    "original_type": "image",
    "page_idx": 2,
    "create_time": 1757908700,
    "update_time": 1757908720,
    "_id": "chunk-68430eb48b5a86af09fa87f43bf15641"
  }
}